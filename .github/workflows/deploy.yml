name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      # Create a deployment directory
      - name: Create deployment directory
        run: |
          mkdir deploy
          cp -r * deploy/ || true
          cd deploy
      
      # Create config files in deployment directory
      - name: Create firebase config
        run: |
          cd deploy
          echo "// Import the functions you need from the SDKs you need
          import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js';
          import { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js';
          import { getDatabase, ref, set } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-database.js';

          // Your web app's Firebase configuration
          const firebaseConfig = {
            apiKey: \"${{ secrets.FIREBASE_API_KEY }}\",
            authDomain: \"${{ secrets.FIREBASE_AUTH_DOMAIN }}\",
            databaseURL: \"${{ secrets.FIREBASE_DATABASE_URL }}\",
            projectId: \"${{ secrets.FIREBASE_PROJECT_ID }}\",
            storageBucket: \"${{ secrets.FIREBASE_STORAGE_BUCKET }}\",
            messagingSenderId: \"${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}\",
            appId: \"${{ secrets.FIREBASE_APP_ID }}\"
          };

          // Initialize Firebase
          const app = initializeApp(firebaseConfig);
          const auth = getAuth(app);
          const database = getDatabase(app);

          // Export the initialized instances
          export { app, auth, database, ref, set };" > firebase-config.js

      - name: Create app config
        run: |
          cd deploy
          echo "export const config = {
            scriptURL: \"${{ secrets.SCRIPT_URL }}\",
            githubPages: {
              baseUrl: \"https://sadjei78.github.io/agl-auc25\",
              environment: \"production\"
            }
          };" > config.js

      # Create Firebase rules file
      - name: Create Firebase rules
        run: |
          cd deploy
          echo '{
            "rules": {
              "users": {
                "$uid": {
                  ".read": "$uid === auth.uid || root.child('\''admins'\'').child(auth.uid).exists()",
                  ".write": "$uid === auth.uid || root.child('\''admins'\'').child(auth.uid).exists()"
                }
              },
              "chat": {
                ".read": "auth != null",
                ".write": "auth != null"
              },
              "activeUsers": {
                ".read": true,
                ".write": true,
                "$user_id": {
                  ".read": true,
                  ".write": true,
                  "email": {
                    ".validate": "newData.isString()"
                  },
                  "lastActive": {
                    ".validate": "newData.isNumber()"
                  }
                }
              },
              "messages": {
                ".read": "auth != null",
                ".write": "auth != null",
                "$user_id": {
                  ".read": "auth != null",
                  ".write": "auth != null"
                }
              },
              "items": {
                ".read": true,
                ".write": "auth != null && root.child('\''admins'\'').child(auth.uid).exists()"
              },
              "admins": {
                ".read": "auth != null",
                ".write": false
              },
              "typing": {
                ".read": true,
                ".write": "auth != null"
              }
            }
          }' > firebase-rules.json

      - name: List deployment files
        run: |
          cd deploy
          echo "Files to be deployed:"
          ls -la

      # Deploy to GitHub Pages
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy
          exclude_assets: ''
          keep_files: false
          commit_message: "Deploy with updated Firebase configuration"

env:
  FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
  FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
  FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
  FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
  FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
  FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}



